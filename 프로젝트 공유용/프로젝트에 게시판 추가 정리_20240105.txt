
 [ 1 ] 게시판 글쓰기 양식 만들기 - 프로젝트 내 기본 설정 관련 내용 (이하 모두 프로젝트(pjSite) 내에서의 작업 내역)

     ① 기본 세팅을 위해 settings.py 내용 수정
          * 파일 업로드와 관련된 내용 import
	- import os
          * 파일과 이미지 업로드를 위한 기본 경로 설정을 위한 변수(MEDIA_URL, MEDIA_ROOT) 추가

     ② 설정한 MEDIA_URL을 사용하기 위해 urls.py 내용 수정
          * 파일 업로드와 관련된 내용 import
	- from django.conf import settings                # settings.py 파일에 설정한 추가 경로를 사용할 수 있도록 import
	- from django.conf.urls.static import static      # static 경로를 사용할 수 있도록 import
          * 파일과 이미지 업로드를 위한 기본 경로 설정을 위한 변수(MEDIA_URL, MEDIA_ROOT) 추가
	- urlpatterns += static(                          # image 파일을 이용하기 위한 기본 경로 재설정.
	      settings.MEDIA_URL, document_root = settings.MEDIA_ROOT
	  )



 [ 2 ] 게시판 글쓰기 양식 만들기 - Model 설정 관련 내용 (이하 모두 [board] 앱 내에서의 작업 내역 / markdown 사용 안함.)

     ① 데이터 등록을 위해 models.py 내용 수정
          * 양식 등록과 관련된 내용 import
	- import os                                       		# 파일 업로드를 사용하기 위해 import
	- from django.contrib.auth.models import User     	# 등록된 사용자 정보를 사용하기 위해 import
          * 클래스 추가/수정 
	- 'Post' 클래스 수정 (등록하고자 하는 항목 추가하기)
	- 'Tag', 'Category', 'Comment' 클래스 추가
		>>> 클래스 추가시 사용하고자 하는 클래스의 로딩 순서도 고려해야 함. (그래야 마이그레이션에서 에러나지 않음.)

     ② 관리자 페이지에서의 처리를 위해 admin.py 수정
          * 양식 등록과 관련된 내용 import
	- from .models import Post, Category, Tag, Comment    	# models.py에서 등록한 클래스들을 import
          * 카테고리와 태그 관리를 위한 클래스 추가 
	- CategoryAdmin / TagAdmin

     ③ 데이터 등록을 위한 양식 사용을 위해 forms.py 파일 추가

     ④ django 내의 db 재설정을 위해 migration 진행
	- python manage.py makemigrations
	- python manage.py migrate

     ⑤ 화면 이동을 위한 urls.py에 path 추가 (FBV 방식이 아닌 CBV 방식으로 진행)

     ⑥ urls.py에서 등록한 path의 사용을 위해 views.py 내 클래스 생성
	- 클래스에서 사용하는 HTML template 파일의 파일명을 수정해서 사용하고 싶을 때는 'template_name' 변수에 파일명을 등록해야 함.

 


 [ 3 ] 게시판 글쓰기 양식 만들기 - 화면 설정 관련 내용 (이하 모두 [board] 앱 내에서의 작업 내역 / markdown 사용 안함.)

     ① 게시물 리스트 페이지(boardList.html) 제작
          * 
	- 
          * 
	- 


     ② 게시글 확인 페이지(boardPage.html) 제작
          * 
	- 

